plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.8'
	id 'org.openapi.generator' version '7.8.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id "io.freefair.lombok" version "8.10.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
def commonSpringAdditionalProperties = [
		java17                 : "true",
		useSpringBoot3         : "true",
		interfaceOnly          : "true",
		openApiNullable        : "false",
		useOptional            : "true",
		hideGenerationTimestamp: "true",
		serializableModel      : "true",
		useJakartaEe           : "true",
		requestMappingMode     : "api_interface",
		generatedConstructorWithRequiredArgs: "false",
		removeEnumValuePrefix  : "false",
		additionalModelTypeAnnotations : ";@lombok.NoArgsConstructor;@lombok.AllArgsConstructor;",
		sourceFolder           : ".", // ← `src/main/java` を自動追加しない
]

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/openapi/query.yaml"
	outputDir = "$rootDir/src"

	apiPackage = "/main/java/com/example/spr/presentation/generated/"

//	apiPackage = "$rootDir/src/main/java/com/examle/spr/presentation/generated"
//	modelPackage = "com.spr.query.common.presentation.openapi.src.main.java.generated.model"
	configOptions = commonSpringAdditionalProperties
}


sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', '$rootDir/profiles/resources']
		}
	}
}


tasks.named('test') {
	useJUnitPlatform()
}